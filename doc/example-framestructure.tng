
function frame(x)
  local struct=fem.Structure("frame")
  local nodes = tmath.Matrix({
    {11, 0, 0, 0},
    {12, 0, 4, 0},
    {13, 4, 4, 0},
    {14, 6, 4, 0},
    {15, 6, 0, 0},
    {16, 10, 0, 0}
  })
  struct:AddNodes(nodes)
  
  -- Define support conditions and fix reference node 16
  struct:GetNode(11):SetAvailDof(tmath.Matrix({{0, 0, 0, 0, 0, 0}}))
  struct:GetNode(15):SetAvailDof(tmath.Matrix({{0, 0, 0, 0, 0, 1}}))
  struct:GetNode(16):SetAvailDof(tmath.Matrix({{0, 0, 0, 0, 0, 0}}))
  
  for i=0,3 do
    local ss = struct:AddSection(i+1, "RECT", 0)
    ss:SetData(tmath.Matrix({{x[i], x[i]}}))
  end
  
  struct:AddMaterial(8, "LINEAR_ELASTIC", tmath.Matrix({{2.1e11, .3, 7850}}))
  local mm=struct:GetMaterial(8)

  struct:AddElements("RECT", 8, 1, tmath.Matrix({{1, 11, 12, 16}}))
  struct:AddElements("RECT", 8, 2, tmath.Matrix({{2, 12, 13, 16}}))
  struct:AddElements("RECT", 8, 3, tmath.Matrix({{3, 13, 14, 16}}))
  struct:AddElements("RECT", 8, 4, tmath.Matrix({{4, 14, 15, 16}}))
  
  local nd=struct:GlobalDof()
  local K=struct:SparseStiffness()
  local F1=struct:GetAllDisplacements()
  F1[{1,0}] = 1e5
  F1[{2,1}] = -1e5
  local F=struct:ToDofDisplacements(F1)
  local U=K:Solve(F)
  local U1=struct:ToAllDisplacements(U)
  local u=U1[{1,0}]
  local w=U1[{2,1}]
    struct:SetDofDisplacements(U)
    ww:Draw(struct)
  return u,w
end
 
-- dofile("frame_model.tng")
 
function v(x)
 local cc=4*x[0]^2+4*x[1]^2+2*x[2]^2+4*x[3]^2
 return cc
end

function c(x)
  local u, w = frame(x)
  local cc=tmath.Matrix({{math.abs(u)-ULIM},{math.abs(w)-ULIM}})
  return cc*SC_CONSTR
end

ww = graphics.Visualize(.05, .05, .6, .6, "Structure")
ww:Lighting(true)
ww:Perspective(true)
ww:SetAngles(10,30,0)
ww:Zoom(2)
first = true
n=4
SC_CONSTR=100
ULIM=.05

ops=optimize.Conmin(n,2)
start = tmath.Matrix(n)
start:SetConstant(.3)
ops:SetDesign(start)

bounds = tmath.Matrix(n,2)
bounds:SetLinearCols(1e-2, 10)
ops:SetBounds(bounds)

done = false
iter = 0
while (not done) do
  iter = iter+1
  done=(ops:Compute()==0)
  x = ops:GetDesign()
  obj = v(x)
  ops:SetObjective(obj)
  constraints = c(x)
  ops:SetConstraints(constraints)
  -- control.Delay(.3)
end

x = ops:GetDesign()
print("x",x)
u,w=frame(x)
print("obj", v(x)*7850,"u",u,"w",w)
print("with", iter, "iterations")
 